spring:
  kafka:
    bootstrap-servers: ${KAFKA_SERVER_URL}
    properties:
      schema.registry.url: ${SCHEMA_REGISTRY_URL}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
    listener:
      ack-mode: MANUAL_IMMEDIATE
    consumer:
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: io.confluent.kafka.serializers.KafkaAvroDeserializer
        specific.avro.reader: false
        schema.registry.url: ${SCHEMA_REGISTRY_URL}



#spring:
#  kafka:
#    bootstrap-servers: http://157.66.218.191:9092
#    properties:
#      schema.registry.url: http://157.66.218.191:8081
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
#    listener:
#      ack-mode: MANUAL_IMMEDIATE
#    consumer:
#      auto-offset-reset: earliest
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
#      properties:
#        spring.deserializer.value.delegate.class: io.confluent.kafka.serializers.KafkaAvroDeserializer
#        specific.avro.reader: false
#        schema.registry.url: http://157.66.218.191:8081
